#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

CFLAGS = -Werror -g -fPIC -DUUID -DMEEGO -DMKCAL_FOR_MEEGO -DTIMED_SUPPORT -fvisibility=hidden -fvisibility-inlines-hidden 

comma :=,
empty :=
space := $(empty) $(empty)

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0 
else
	CFLAGS += -O2 
endif

ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
    INSTALL_PROGRAM += -s
endif

TMP_BUILD_OPTS = $(subst $(comma),$(space),$(DEB_BUILD_OPTIONS))

ifneq (,$(filter parallel=%,$(TMP_BUILD_OPTS)))
         NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(TMP_BUILD_OPTS)))
	 PARALLEL_MAKEFLAGS += -j$(NUMJOBS)
endif

# shared library versions, option 1
#version=4.2.60
#major=4
# option 2, assuming the library is created as src/.libs/libfoo.so.2.0.5 or so
#version=`ls src/.libs/lib*.so.* | \
# awk '{if (match($$0,/[0-9]+\.[0-9]+\.[0-9]+$$/)) print substr($$0,RSTART)}'`
#major=`ls src/.libs/lib*.so.* | \
# awk '{if (match($$0,/\.so\.[0-9]+$$/)) print substr($$0,RSTART+4)}'`
VER_MAJ=$(shell dpkg-parsechangelog | grep Version | cut -d' ' -f2 | cut -d'-' -f1 | cut -d'.' -f1)
VER_MIN=$(shell dpkg-parsechangelog | grep Version | cut -d' ' -f2 | cut -d'-' -f1 | cut -d'.' -f2)
VER_PAT=$(shell dpkg-parsechangelog | grep Version | cut -d' ' -f2 | cut -d'-' -f1 | cut -d'.' -f3)

configure: configure-stamp
configure-stamp:
	dh_testdir
	# Add here commands to configure the package.
	touch src/libmkcal.so.$(VER_MAJ).$(VER_MIN).$(VER_PAT)
	qmake
	touch configure-stamp


build: build-stamp
build-stamp: configure-stamp 
	dh_testdir

	# Add here commands to compile the package.
	$(MAKE) $(PARALLEL_MAKEFLAGS) VER_MAJ=$(VER_MAJ) VER_MIN=$(VER_MIN) VER_PAT=$(VER_PAT) CXXFLAGS='$(CFLAGS)'
	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	# Add here commands to clean up after the build process.
	[ ! -f Makefile ] || $(MAKE) $(PARALLEL_MAKEFLAGS) distclean
	rm -f Makefile src/Makefile
	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	#libextendedkcal-doc
	make $(PARALLEL_MAKEFLAGS) doc

	INSTALL_ROOT=$(CURDIR)/debian/tmp make $(PARALLEL_MAKEFLAGS) install
	# Add here commands to install the package into debian/tmp
	#$(MAKE) DESTDIR=$(CURDIR)/debian/tmp VER_MAJ=$(VER_MAJ) VER_MIN=$(VER_MIN) VER_PAT=$(VER_PAT) install


# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installdirs
	dh_installchangelogs
	dh_installdocs
	dh_installexamples
	dh_link usr/lib/libmkcal.so.$(VER_MAJ).$(VER_MIN).$(VER_PAT) usr/lib/libmkcal.so
	dh_link usr/lib/libmkcal.so.$(VER_MAJ).$(VER_MIN).$(VER_PAT) usr/lib/libmkcal.so.$(VER_MAJ)
	dh_install --sourcedir=debian/tmp -v
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip --keep-debug --dbg-package=libmkcal-dbg
#	rm -f debian/libextendedkcal-dbg/usr/lib/libextendedkcal.so.$(VER_MAJ).$(VER_MIN).$(VER_PAT)
	dh_compress
	dh_fixperms
#	dh_perl
#	dh_python
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb
	aegis-deb-add -control debian/libmkcal/DEBIAN/control .. debian/libmkcal.aegis=_aegis

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
